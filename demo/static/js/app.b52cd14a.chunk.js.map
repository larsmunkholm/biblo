{"version":3,"sources":["src sync //.biblo/.[tj]sx?$","src/screens/Home.screen.tsx","src/screens/basic-viewport/BasicViewport.screen.tsx","src/screens/react-navigation/Reader.screen.tsx","src/screens/react-navigation/ReactNavigation.screen.tsx","App.tsx","src/components/atoms/Paragraph/Paragraph.biblo.tsx","src/components/atoms/Skeleton/Skeleton.biblo.tsx","src/components/atoms/Button/Button.component.tsx","src/components/atoms/Button/Button.biblo.tsx","src/components/atoms/Separator/Separator.component.tsx","src/components/atoms/Separator/Separator.biblo.tsx","src/components/atoms/SkeletonParagraph/SkeletonParagraph.component.tsx","src/components/atoms/SkeletonParagraph/SkeletonParagraph.biblo.tsx","src/components/atoms/Paragraph/Paragraph.component.tsx","src/constants/sizes.constant.ts","src/components/atoms/Skeleton/Skeleton.component.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","HomeScreen","linkTo","useLinkTo","View","style","padding","marginBottom","Button","title","onPress","components","bibloImporter","require","BasicViewportScreen","scrollViewRef","useRef","readerOptions","scrollViewProps","ref","onMount","current","scrollTo","x","y","animated","backgroundColor","height","borderTopWidth","borderTopColor","ReaderScreen","params","useRoute","file","Stack","createNativeStackNavigator","ReactNavigationScreen","navigate","useNavigation","addons","BibloAddonSimpleMarkup","onSelectFile","name","Navigator","Screen","component","BibloIndex","options","App","SafeAreaView","flex","maxHeight","Dimensions","get","paddingTop","Platform","OS","StatusBar","currentHeight","NavigationContainer","linking","prefixes","config","screens","Home","BasicViewport","ReactNavigation","headerShown","MOCK_LOREM_IPSUM","subtitle","description","tags","props","children","Template","Default","bind","Italic","italic","Tiny","size","ParagraphSize","Small","Large","Larger","ExtraLarge","Bold","weight","ParagraphWeight","WithOpacity","opacity","Colored","color","Centered","center","LineHeight125","LineHeight1","lineHeight","LineHeight15","LineHeight2","width","WithoutOpacity","WithCustomOpacity","WithCustomRadius","radius","text","textColor","bgColor","radiusLeft","radiusRight","pressableProps","colorScheme","useColorScheme","Pressable","accessibilityRole","position","overflow","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderRadius","pointerEvents","alignItems","justifyContent","Alert","alert","undefined","WithCustomDimensions","WithRadius","WithRadiusLeft","WithRadiusRight","Separator","marginTop","marginVertical","noMarginHorizontal","marginHorizontal","borderWidth","borderColor","borderStyle","wrapperStyle","paddingVertical","MarginVertical","MarginTop","MarginBottom","NoMarginHorizontal","SkeletonParagraph","React","memo","lines","Medium","lineArray","useMemo","SIZES","Array","Math","max","fill","_","index","displayName","MultipleLines","args","Paragraph","lineHeightProp","Regular","colorProp","fontSize","fontWeight","fontStyle","textAlign","tiny","small","medium","large","larger","extraLarge","Skeleton","margin"],"mappings":"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","file":"static/js/app.b52cd14a.chunk.js","sourcesContent":["var map = {\n\t\"./components/atoms/Button/Button.biblo.tsx\": 197,\n\t\"./components/atoms/Paragraph/Paragraph.biblo.tsx\": 191,\n\t\"./components/atoms/Separator/Separator.biblo.tsx\": 198,\n\t\"./components/atoms/Skeleton/Skeleton.biblo.tsx\": 192,\n\t\"./components/atoms/SkeletonParagraph/SkeletonParagraph.biblo.tsx\": 199\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 104;","import React from \"react\";\nimport { Button, View } from \"react-native\";\nimport { useLinkTo } from \"@react-navigation/native\";\nimport { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\n\nexport default function HomeScreen() {\n    const linkTo = useLinkTo<NativeStackNavigationProp<any>>();\n    return (\n        <View style={{ padding: 15 }}>\n            <View style={{ marginBottom: 15 }}>\n                <Button\n                    title=\"Basic viewport\"\n                    onPress={() => linkTo(\"/demo/basic-viewport\")}\n                />\n            </View>\n            <View style={{ marginBottom: 15 }}>\n                <Button\n                    title=\"React Navigation\"\n                    onPress={() => linkTo(\"/demo/react-navigation\")}\n                />\n            </View>\n        </View>\n    );\n}\n","import React, { useRef } from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport {\n    bibloImporter,\n    BibloProvider,\n    BibloIndex,\n    BibloReader,\n} from \"@biblo/react-native\";\n\nconst components = bibloImporter(\n    require.context(\"../../\", true, /\\.biblo\\.[tj]sx?$/),\n);\n\nexport default function BasicViewportScreen() {\n    const scrollViewRef = useRef<ScrollView>(null);\n    return (\n        <BibloProvider\n            components={components}\n            readerOptions={{\n                scrollViewProps: {\n                    ref: scrollViewRef,\n                },\n                onMount: () =>\n                    scrollViewRef.current?.scrollTo({\n                        x: 0,\n                        y: 0,\n                        animated: false,\n                    }),\n            }}\n        >\n            <View style={{ backgroundColor: \"white\", height: \"50%\" }}>\n                <BibloIndex />\n            </View>\n            <View\n                style={{\n                    height: \"50%\",\n                    backgroundColor: \"white\",\n                    borderTopWidth: 1,\n                    borderTopColor: \"#000\",\n                }}\n            >\n                <BibloReader />\n            </View>\n        </BibloProvider>\n    );\n}\n","import React from \"react\";\nimport { BibloReader } from \"@biblo/react-native\";\nimport { Route, useRoute } from \"@react-navigation/native\";\n\ntype Lol = Route<\"reader\", { file?: string }>;\n\nexport const ReaderScreen = () => {\n    const { params } = useRoute<Lol>();\n    return params?.file ? <BibloReader file={params.file} /> : null;\n};\n","import React from \"react\";\nimport { bibloImporter, BibloProvider, BibloIndex } from \"@biblo/react-native\";\nimport BibloAddonSimpleMarkup from \"@biblo/addon-simple-markup\";\nimport {\n    createNativeStackNavigator,\n    NativeStackNavigationProp,\n} from \"@react-navigation/native-stack\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { ReaderScreen } from \"./Reader.screen\";\n\nconst components = bibloImporter(\n    // @ts-ignore\n    require.context(\"../../\", true, /\\.biblo\\.[tj]sx?$/),\n);\n\nconst Stack = createNativeStackNavigator();\n\nexport default function ReactNavigationScreen() {\n    const { navigate } = useNavigation<NativeStackNavigationProp<any>>();\n    return (\n        <BibloProvider\n            components={components}\n            addons={[BibloAddonSimpleMarkup]}\n            onSelectFile={(file) => {\n                navigate({ name: \"reader\", params: { file } });\n            }}\n        >\n            <Stack.Navigator>\n                <Stack.Screen\n                    name=\"index\"\n                    component={BibloIndex}\n                    options={{ title: \"React Navigation\" }}\n                />\n                <Stack.Screen\n                    name=\"reader\"\n                    component={ReaderScreen}\n                    options={{ title: \"Biblo file\" }}\n                />\n            </Stack.Navigator>\n        </BibloProvider>\n    );\n}\n","import React from \"react\";\nimport { Dimensions, Platform, SafeAreaView, StatusBar } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport HomeScreen from \"./src/screens/Home.screen\";\nimport BasicViewportScreen from \"./src/screens/basic-viewport/BasicViewport.screen\";\nimport ReactNavigationScreen from \"./src/screens/react-navigation/ReactNavigation.screen\";\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n    return (\n        <SafeAreaView\n            style={{\n                flex: 1,\n                maxHeight: Dimensions.get(\"window\").height,\n                paddingTop:\n                    Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\n                backgroundColor: \"white\",\n            }}\n        >\n            <NavigationContainer\n                linking={{\n                    prefixes: [],\n                    config: {\n                        screens: {\n                            Home: \"/demo\",\n                            BasicViewport: \"/demo/basic-viewport\",\n                            ReactNavigation: \"/demo/react-navigation\",\n                        },\n                    },\n                }}\n            >\n                <Stack.Navigator>\n                    <Stack.Screen name=\"Home\" component={HomeScreen} />\n                    <Stack.Screen\n                        name=\"BasicViewport\"\n                        options={{ title: \"Basic viewport\" }}\n                        component={BasicViewportScreen}\n                    />\n                    <Stack.Screen\n                        name=\"ReactNavigation\"\n                        options={{ headerShown: false }}\n                        component={ReactNavigationScreen}\n                    />\n                </Stack.Navigator>\n            </NavigationContainer>\n        </SafeAreaView>\n    );\n}\n","import React from \"react\";\nimport { BibloBio, BibloItem } from \"@biblo/react-native\";\nimport {\n    Paragraph,\n    ParagraphProps,\n    ParagraphSize,\n    ParagraphWeight,\n} from \"./Paragraph.component\";\n\nconst MOCK_LOREM_IPSUM =\n    \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Culpa, dolores id impedit ipsam laboriosam necessitatibus praesentium reiciendis sunt veniam veritatis voluptas voluptatum. Ipsam nesciunt ratione velit! Delectus dolorem est repudiandae.\";\n\nexport default {\n    title: \"Paragraph\",\n    subtitle: \"For _text nodes_\",\n    description: `Use ~~that~~ this for **texts** of all sizes, weights and colors.\n\n• Paragraphs\n• Headlines\n• Comments\n• and so on...`,\n    tags: [\"typography\", \"text\"],\n    props: {\n        children: \"Lorem ipsum dolor sit amet.\",\n    },\n} as BibloBio<ParagraphProps>;\n\nconst Template: BibloItem<ParagraphProps> = (props) => <Paragraph {...props} />;\n\nexport const Default = Template.bind({});\n\nexport const Italic = Template.bind({});\nItalic.props = { italic: true };\n\nexport const Tiny = Template.bind({});\nTiny.description = \"Very small text. Use with caution.\";\nTiny.props = { size: ParagraphSize.Tiny };\n\nexport const Small = Template.bind({});\nSmall.props = { size: ParagraphSize.Small };\n\nexport const Large = Template.bind({});\nLarge.props = { size: ParagraphSize.Large };\n\nexport const Larger = Template.bind({});\nLarger.props = { size: ParagraphSize.Larger };\n\nexport const ExtraLarge = Template.bind({});\nExtraLarge.props = { size: ParagraphSize.ExtraLarge };\n\nexport const Bold = Template.bind({});\nBold.props = { weight: ParagraphWeight.Bold };\n\nexport const WithOpacity = Template.bind({});\nWithOpacity.props = { opacity: 0.333 };\n\nexport const Colored = Template.bind({});\nColored.props = { color: \"red\" };\n\nexport const Centered = Template.bind({});\nCentered.props = { center: true };\n\nexport const LineHeight125 = Template.bind({});\nLineHeight125.title = \"Line height 1.25\";\nLineHeight125.description = \"This is the default line height.\";\nLineHeight125.props = { children: MOCK_LOREM_IPSUM };\n\nexport const LineHeight1 = Template.bind({});\nLineHeight1.title = \"Line height 1\";\nLineHeight1.props = { children: MOCK_LOREM_IPSUM, lineHeight: 1 };\n\nexport const LineHeight15 = Template.bind({});\nLineHeight15.title = \"Line height 1.5\";\nLineHeight15.description = \"Use this for longer texts\";\nLineHeight15.props = { children: MOCK_LOREM_IPSUM, lineHeight: 1.5 };\n\nexport const LineHeight2 = Template.bind({});\nLineHeight2.title = \"Line height 2\";\nLineHeight2.props = { children: MOCK_LOREM_IPSUM, lineHeight: 2 };\n","import React from \"react\";\nimport { BibloBio, BibloItem } from \"@biblo/react-native\";\nimport { Skeleton } from \"./Skeleton.component\";\nimport { SkeletonProps } from \"./Skeleton.props\";\n\nexport default {\n    title: \"Skeleton\",\n    tags: [\"indicator\"],\n    props: {\n        width: 200,\n        height: 100,\n    },\n} as BibloBio<SkeletonProps>;\n\nconst Template: BibloItem<SkeletonProps> = (props) => <Skeleton {...props} />;\n\nexport const Default = Template.bind({});\n\nexport const Colored: BibloItem<SkeletonProps> = (props) => {\n    return <Skeleton {...props} color=\"red\" />;\n};\n\nexport const WithoutOpacity = Template.bind({});\nWithoutOpacity.props = { opacity: 1 };\n\nexport const WithCustomOpacity = Template.bind({});\nWithCustomOpacity.props = { opacity: 0.5 };\n\nexport const WithCustomRadius = Template.bind({});\nWithCustomRadius.props = { radius: 50 };\n","import React from \"react\";\nimport { Pressable, useColorScheme, View } from \"react-native\";\nimport { ButtonProps } from \"./Button.props\";\nimport { Paragraph } from \"../Paragraph/Paragraph.component\";\n\nexport const Button = ({\n    text,\n    onPress,\n    textColor,\n    backgroundColor: bgColor,\n    width,\n    height = 40,\n    radius,\n    radiusLeft,\n    radiusRight,\n    style,\n    ...pressableProps\n}: ButtonProps) => {\n    const colorScheme = useColorScheme();\n    const color = textColor || (colorScheme === \"light\" ? \"#fff\" : \"#000\");\n    const backgroundColor =\n        bgColor || (colorScheme === \"light\" ? \"#333\" : \"#ddd\");\n    return (\n        <Pressable\n            accessibilityRole=\"button\"\n            onPress={onPress}\n            style={{\n                position: \"relative\",\n                overflow: \"hidden\",\n                borderTopLeftRadius: radiusLeft,\n                borderBottomLeftRadius: radiusLeft,\n                borderTopRightRadius: radiusRight,\n                borderBottomRightRadius: radiusRight,\n                borderRadius: radius,\n                width,\n                height,\n                backgroundColor,\n            }}\n            {...pressableProps}\n        >\n            <View\n                pointerEvents=\"none\"\n                style={[\n                    {\n                        width,\n                        height,\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                    },\n                    style,\n                ]}\n            >\n                <Paragraph color={color}>{text}</Paragraph>\n            </View>\n        </Pressable>\n    );\n};\n","import React from \"react\";\nimport { Alert, useColorScheme } from \"react-native\";\nimport { BibloBio, BibloItem } from \"@biblo/react-native\";\nimport { Button } from \"./Button.component\";\nimport { ButtonProps } from \"./Button.props\";\n\nexport default {\n    title: \"Button\",\n    tags: [\"interactive\", \"button\"],\n    props: {\n        text: \"Press me\",\n        onPress: () => Alert.alert(\"Bonk!\", \"You pressed the button.\"),\n    },\n} as BibloBio<ButtonProps>;\n\nconst Template: BibloItem<ButtonProps> = (props) => <Button {...props} />;\n\nexport const Default = Template.bind({});\nDefault.props = { width: undefined, height: undefined };\n\nexport const WithCustomDimensions = Template.bind({});\nWithCustomDimensions.props = {\n    width: 150,\n    height: 60,\n};\n\nexport const Colored: BibloItem<ButtonProps> = (props) => {\n    const colorScheme = useColorScheme();\n    const backgroundColor = colorScheme === \"light\" ? \"maroon\" : \"pink\";\n    const textColor = colorScheme === \"light\" ? \"pink\" : \"maroon\";\n    return (\n        <Button\n            {...props}\n            backgroundColor={backgroundColor}\n            textColor={textColor}\n        />\n    );\n};\n\nexport const WithRadius = Template.bind({});\nWithRadius.title = \"With round corners\";\nWithRadius.props = { radius: 10 };\n\nexport const WithRadiusLeft = Template.bind({});\nWithRadiusLeft.title = \"With round corners left\";\nWithRadiusLeft.props = { radiusLeft: 10 };\n\nexport const WithRadiusRight = Template.bind({});\nWithRadiusRight.title = \"With round corners right\";\nWithRadiusRight.props = { radiusRight: 10 };\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport { SeparatorProps } from \"./Separator.props\";\n\nexport const Separator = ({\n    marginTop,\n    marginBottom,\n    marginVertical,\n    noMarginHorizontal,\n}: SeparatorProps) => {\n    return (\n        <View\n            style={{\n                marginVertical: marginVertical ? 15 : undefined,\n                marginTop: marginTop ? 15 : undefined,\n                marginBottom: marginBottom ? 15 : undefined,\n                marginHorizontal: noMarginHorizontal ? undefined : 15,\n                overflow: \"hidden\",\n            }}\n        >\n            <View\n                style={{\n                    marginTop: -1,\n                    borderWidth: 1,\n                    borderColor: \"#ccc\",\n                    borderStyle: \"dashed\",\n                }}\n            />\n        </View>\n    );\n};\n","import React from \"react\";\nimport { BibloBio, BibloItem } from \"@biblo/react-native\";\nimport { Separator } from \"./Separator.component\";\nimport { SeparatorProps } from \"./Separator.props\";\n\nexport default {\n    title: \"Separator\",\n    description:\n        \"Be aware that the separator in all these examples is placed in a box with padding in top and bottom.\",\n    tags: [\"graphics\"],\n    wrapperStyle: {\n        marginHorizontal: 0,\n        paddingVertical: 10,\n        justifyContent: \"center\",\n        backgroundColor: \"#efefef\",\n    },\n} as BibloBio<SeparatorProps>;\n\nconst Template: BibloItem<SeparatorProps> = (props) => <Separator {...props} />;\n\nexport const Default = Template.bind({});\n\nexport const MarginVertical = Template.bind({});\nMarginVertical.props = { marginVertical: true };\n\nexport const MarginTop = Template.bind({});\nMarginTop.props = { marginTop: true };\n\nexport const MarginBottom = Template.bind({});\nMarginBottom.props = { marginTop: true };\n\nexport const NoMarginHorizontal = Template.bind({});\nNoMarginHorizontal.props = { noMarginHorizontal: true };\n","import React, { useMemo } from \"react\";\nimport { View } from \"react-native\";\nimport { ParagraphSize } from \"../Paragraph/Paragraph.component\";\nimport { Skeleton } from \"../Skeleton/Skeleton.component\";\nimport { SkeletonParagraphProps } from \"./SkeletonParagraph.props\";\nimport { SIZES } from \"../../../constants/sizes.constant\";\n\nexport const SkeletonParagraph = React.memo(\n    ({\n        lines = 1,\n        size = ParagraphSize.Medium,\n        lineHeight = 1.25,\n        color,\n        marginBottom,\n        width,\n        opacity = 0.15,\n    }: SkeletonParagraphProps) => {\n        const lineArray = useMemo(() => {\n            const height = SIZES[size] - (lineHeight === 1 ? 4 : 0);\n            const marginVertical =\n                (height * lineHeight - height) / 2 + (lineHeight === 1 ? 2 : 0);\n            return new Array(Math.max(1, lines))\n                .fill(\"\")\n                .map((_, index) => (\n                    <Skeleton\n                        key={`line-${index}`}\n                        width={width || (index % 2 === 0 ? \"85%\" : \"65%\")}\n                        height={height}\n                        marginVertical={marginVertical}\n                        color={color}\n                        opacity={opacity}\n                    />\n                ));\n        }, [lines, size, width, color, lineHeight, opacity]);\n\n        return <View style={{ marginBottom }}>{lineArray}</View>;\n    },\n);\n\nSkeletonParagraph.displayName = \"SkeletonParagraph\";\n","import React from \"react\";\nimport { BibloBio, BibloItem } from \"@biblo/react-native\";\nimport { SkeletonParagraph } from \"./SkeletonParagraph.component\";\nimport { SkeletonParagraphProps } from \"./SkeletonParagraph.props\";\nimport { ParagraphSize } from \"../Paragraph/Paragraph.component\";\n\nexport default {\n    title: \"SkeletonParagraph\",\n    tags: [\"indicator\", \"typography\"],\n    props: {\n        lines: 4,\n    },\n} as BibloBio<SkeletonParagraphProps>;\n\nconst Template: BibloItem<SkeletonParagraphProps> = (props) => (\n    <SkeletonParagraph {...props} />\n);\n\nexport const Default = Template.bind({});\nDefault.props = { lines: 1 };\n\nexport const MultipleLines = Template.bind({});\n\nexport const Colored: BibloItem<SkeletonParagraphProps> = (args) => {\n    return <SkeletonParagraph {...args} color=\"red\" />;\n};\n\nexport const WithoutOpacity = Template.bind({});\nWithoutOpacity.props = { opacity: 1 };\n\nexport const WithCustomOpacity = Template.bind({});\nWithCustomOpacity.props = { opacity: 0.5 };\n\nexport const Tiny = Template.bind({});\nTiny.props = { size: ParagraphSize.Tiny };\n\nexport const Small = Template.bind({});\nSmall.props = { size: ParagraphSize.Small };\n\nexport const Large = Template.bind({});\nLarge.props = { size: ParagraphSize.Large };\n\nexport const Larger = Template.bind({});\nLarger.props = { size: ParagraphSize.Larger };\n\nexport const ExtraLarge = Template.bind({});\nExtraLarge.props = { size: ParagraphSize.ExtraLarge };\n\nexport const LineHeight1 = Template.bind({});\nLineHeight1.title = \"Line height 1\";\nLineHeight1.props = { lineHeight: 1 };\n\nexport const LineHeight15 = Template.bind({});\nLineHeight15.title = \"Line height 1.5\";\nLineHeight15.props = { lineHeight: 1.5 };\n\nexport const LineHeight2 = Template.bind({});\nLineHeight2.title = \"Line height 2\";\nLineHeight2.props = { lineHeight: 2 };\n","import React from \"react\";\nimport { Text, TextProps } from \"react-native\";\nimport { SIZES } from \"../../../constants/sizes.constant\";\n\nexport enum ParagraphSize {\n    Tiny = \"tiny\",\n    Small = \"small\",\n    Medium = \"medium\",\n    Large = \"large\",\n    Larger = \"larger\",\n    ExtraLarge = \"extraLarge\",\n}\n\nexport type ParagraphLineHeights = \"auto\" | 1 | 1.25 | 1.5 | 2;\n\nexport enum ParagraphWeight {\n    Regular = \"Regular\",\n    Bold = \"Bold\",\n}\n\nexport interface ParagraphProps extends Omit<TextProps, \"style\"> {\n    size?: ParagraphSize;\n    lineHeight?: ParagraphLineHeights;\n    weight?: ParagraphWeight;\n    italic?: boolean;\n    color?: string;\n    marginTop?: number;\n    marginBottom?: number;\n    opacity?: number;\n    center?: boolean;\n}\n\nexport const Paragraph = ({\n    size = ParagraphSize.Medium,\n    lineHeight: lineHeightProp = 1.25,\n    weight = ParagraphWeight.Regular,\n    italic,\n    color: colorProp,\n    marginTop,\n    marginBottom,\n    opacity,\n    center,\n    children,\n    ...props\n}: ParagraphProps) => {\n    const color = colorProp || \"#000\";\n    const fontSize = SIZES[size];\n    const lineHeight =\n        lineHeightProp === \"auto\" ? undefined : SIZES[size] * lineHeightProp;\n\n    return (\n        <Text\n            {...props}\n            style={{\n                color,\n                fontSize,\n                fontWeight:\n                    weight === ParagraphWeight.Bold ? \"bold\" : undefined,\n                fontStyle: italic ? \"italic\" : undefined,\n                lineHeight,\n                opacity,\n                marginTop,\n                marginBottom,\n                textAlign: center ? \"center\" : undefined,\n            }}\n        >\n            {children}\n        </Text>\n    );\n};\n","export const SIZES = {\n    tiny: 10,\n    small: 13,\n    medium: 15,\n    large: 17,\n    larger: 20,\n    extraLarge: 26,\n};\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport { SkeletonProps } from \"./Skeleton.props\";\n\nexport const Skeleton = React.memo(\n    ({\n        width,\n        height,\n        color,\n        opacity = 0.1,\n        radius,\n        margin,\n        marginHorizontal,\n        marginVertical,\n    }: SkeletonProps) => {\n        return (\n            <View\n                style={{\n                    width,\n                    height,\n                    margin,\n                    marginHorizontal,\n                    marginVertical,\n                    opacity,\n                    borderRadius: radius || 5,\n                    overflow: \"hidden\",\n                    backgroundColor: color || \"#000\",\n                }}\n            />\n        );\n    },\n);\n\nSkeleton.displayName = \"Skeleton\";\n"],"sourceRoot":""}