{"version":3,"sources":["src/screens/Home.screen.tsx","src/screens/basic-viewport/BasicViewport.screen.tsx","src/screens/react-navigation/Reader.screen.tsx","src/screens/react-navigation/ReactNavigation.screen.tsx","App.tsx","src sync //.biblo/.[tj]sx?$"],"names":["HomeScreen","linkTo","useLinkTo","View","style","padding","marginBottom","Button","title","onPress","components","bibloImporter","require","BasicViewportScreen","scrollViewRef","useRef","readerOptions","scrollViewProps","ref","onMount","current","scrollTo","x","y","animated","backgroundColor","height","borderTopWidth","borderTopColor","ReaderScreen","params","useRoute","file","Stack","createNativeStackNavigator","ReactNavigationScreen","navigate","useNavigation","addons","BibloAddonSimpleMarkup","onSelectFile","name","Navigator","Screen","component","BibloIndex","options","App","SafeAreaView","flex","maxHeight","Dimensions","get","paddingTop","Platform","OS","StatusBar","currentHeight","NavigationContainer","linking","prefixes","config","screens","Home","BasicViewport","ReactNavigation","headerShown","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports"],"mappings":"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","file":"static/js/app.45a7b3fc.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button, View } from \"react-native\";\nimport { useLinkTo } from \"@react-navigation/native\";\nimport { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\n\nexport default function HomeScreen() {\n    const linkTo = useLinkTo<NativeStackNavigationProp<any>>();\n    return (\n        <View style={{ padding: 15 }}>\n            <View style={{ marginBottom: 15 }}>\n                <Button\n                    title=\"Basic viewport\"\n                    onPress={() => linkTo(\"/demo/basic-viewport\")}\n                />\n            </View>\n            <View style={{ marginBottom: 15 }}>\n                <Button\n                    title=\"React Navigation\"\n                    onPress={() => linkTo(\"/demo/react-navigation\")}\n                />\n            </View>\n        </View>\n    );\n}\n","import React, { useRef } from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport {\n    bibloImporter,\n    BibloProvider,\n    BibloIndex,\n    BibloReader,\n} from \"@biblo/react-native\";\n\nconst components = bibloImporter(\n    require.context(\"../../\", true, /\\.biblo\\.[tj]sx?$/),\n);\n\nexport default function BasicViewportScreen() {\n    const scrollViewRef = useRef<ScrollView>(null);\n    return (\n        <BibloProvider\n            components={components}\n            readerOptions={{\n                scrollViewProps: {\n                    ref: scrollViewRef,\n                },\n                onMount: () =>\n                    scrollViewRef.current?.scrollTo({\n                        x: 0,\n                        y: 0,\n                        animated: false,\n                    }),\n            }}\n        >\n            <View style={{ backgroundColor: \"white\", height: \"50%\" }}>\n                <BibloIndex />\n            </View>\n            <View\n                style={{\n                    height: \"50%\",\n                    backgroundColor: \"white\",\n                    borderTopWidth: 1,\n                    borderTopColor: \"#000\",\n                }}\n            >\n                <BibloReader />\n            </View>\n        </BibloProvider>\n    );\n}\n","import React from \"react\";\nimport { BibloReader } from \"@biblo/react-native\";\nimport { Route, useRoute } from \"@react-navigation/native\";\n\ntype Lol = Route<\"reader\", { file?: string }>;\n\nexport const ReaderScreen = () => {\n    const { params } = useRoute<Lol>();\n    return params?.file ? <BibloReader file={params.file} /> : null;\n};\n","import React from \"react\";\nimport { bibloImporter, BibloProvider, BibloIndex } from \"@biblo/react-native\";\nimport BibloAddonSimpleMarkup from \"@biblo/addon-simple-markup\";\nimport {\n    createNativeStackNavigator,\n    NativeStackNavigationProp,\n} from \"@react-navigation/native-stack\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { ReaderScreen } from \"./Reader.screen\";\n\nconst components = bibloImporter(\n    // @ts-ignore\n    require.context(\"../../\", true, /\\.biblo\\.[tj]sx?$/),\n);\n\nconst Stack = createNativeStackNavigator();\n\nexport default function ReactNavigationScreen() {\n    const { navigate } = useNavigation<NativeStackNavigationProp<any>>();\n    return (\n        <BibloProvider\n            components={components}\n            addons={[BibloAddonSimpleMarkup]}\n            onSelectFile={(file) => {\n                navigate({ name: \"reader\", params: { file } });\n            }}\n        >\n            <Stack.Navigator>\n                <Stack.Screen\n                    name=\"index\"\n                    component={BibloIndex}\n                    options={{ title: \"React Navigation\" }}\n                />\n                <Stack.Screen\n                    name=\"reader\"\n                    component={ReaderScreen}\n                    options={{ title: \"Biblo file\" }}\n                />\n            </Stack.Navigator>\n        </BibloProvider>\n    );\n}\n","import React from \"react\";\nimport { Dimensions, Platform, SafeAreaView, StatusBar } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport HomeScreen from \"./src/screens/Home.screen\";\nimport BasicViewportScreen from \"./src/screens/basic-viewport/BasicViewport.screen\";\nimport ReactNavigationScreen from \"./src/screens/react-navigation/ReactNavigation.screen\";\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n    return (\n        <SafeAreaView\n            style={{\n                flex: 1,\n                maxHeight: Dimensions.get(\"window\").height,\n                paddingTop:\n                    Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\n                backgroundColor: \"white\",\n            }}\n        >\n            <NavigationContainer\n                linking={{\n                    prefixes: [],\n                    config: {\n                        screens: {\n                            Home: \"/demo\",\n                            BasicViewport: \"/demo/basic-viewport\",\n                            ReactNavigation: \"/demo/react-navigation\",\n                        },\n                    },\n                }}\n            >\n                <Stack.Navigator>\n                    <Stack.Screen name=\"Home\" component={HomeScreen} />\n                    <Stack.Screen\n                        name=\"BasicViewport\"\n                        options={{ title: \"Basic viewport\" }}\n                        component={BasicViewportScreen}\n                    />\n                    <Stack.Screen\n                        name=\"ReactNavigation\"\n                        options={{ headerShown: false }}\n                        component={ReactNavigationScreen}\n                    />\n                </Stack.Navigator>\n            </NavigationContainer>\n        </SafeAreaView>\n    );\n}\n","var map = {\n\t\"./components/atoms/Button/Button.biblo.tsx\": 185,\n\t\"./components/atoms/Paragraph/Paragraph.biblo.tsx\": 186,\n\t\"./components/atoms/Separator/Separator.biblo.tsx\": 187,\n\t\"./components/atoms/Skeleton/Skeleton.biblo.tsx\": 188,\n\t\"./components/atoms/SkeletonParagraph/SkeletonParagraph.biblo.tsx\": 189\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 98;"],"sourceRoot":""}